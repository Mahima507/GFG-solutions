//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.io.*;
import java.lang.*;

class GFG{
	public static void main(String [] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int test = Integer.parseInt(br.readLine());
		while(test-- > 0) {
			int n = Integer.parseInt(br.readLine());
			int [] arr = new int[n];
			String [] str = br.readLine().trim().split(" ");
			for(int i = 0; i < n; i++)
				arr[i] = Integer.parseInt(str[i]);
			Solution ob = new Solution();
			int [] ans = ob.nearestSmallestTower(arr);
			for(int i = 0; i < n; i++)
				System.out.print(ans[i]+" ");
			System.out.println();
		}
		
	}
}
// } Driver Code Ends


//User function Template for Java


class Solution{
	int [] nearestSmallestTower(int [] arr){
		//Write your code here
		
		int n = arr.length;
        Stack<Integer> st = new Stack<>();
        int []ans = new int[n];
        int []left = new int[n];
        int []right = new int[n];
        
        //left smaller
        for(int i=0;i<n;i++){
            while(st.size()!=0 && arr[st.peek()]>=arr[i])st.pop();
            if(st.size()!=0)left[i]=st.peek();
            else left[i]=-1;
            st.push(i);
        }
        
        while(st.size()!=0)st.pop();
        
        //right smaller
        for(int i=n-1;i>=0;i--){
            while(st.size()!=0 && arr[st.peek()]>=arr[i])st.pop();
            if(st.size()!=0)right[i]=st.peek();
            else right[i]=-1;
            st.push(i);
        }
        
        for(int i=0;i<n;i++){
            if(left[i]==right[i])ans[i]=-1;
            else if(left[i]==-1)ans[i]=right[i];
            else if(right[i]==-1)ans[i]=left[i];
            else if(i-left[i]<right[i]-i)ans[i]=left[i];
            else if(i-left[i]>right[i]-i)ans[i]=right[i];
            else if(arr[right[i]]<arr[left[i]])ans[i]=right[i];
            else ans[i]=left[i];
        }
        return ans;
	}
	
}
